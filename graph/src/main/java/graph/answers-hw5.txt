## CSE 331 hw-graph Coding Questions

## Part 2
###########################################################################

Briefly explain why you included the operations you did and why you feel they are a sufficient
interface to a graph. If your design includes multiple classes or interfaces, explain why you
included each one; if not, explain whether you considered additional classes and why you decided
not to include them.

My design includes one interface that is Map, because I think using Map is sufficient to create a
graph that depicts the campus map, if we are not considering sorting algorithms that might need
a SortedMap.
I included AddNode and RemoveNode which allow clients to add a node to and remove a node from the
map. I also included AddEdge and RemoveEdge that works in the same manner but for edges between
a pair of connected nodes. Additionally, I include ListChildren and ListParents methods to compute
what a particular node is connected to and from.


## Part 3
###########################################################################

What was your testing strategy for this assignment? How do your script tests and JUnit tests
differ from each other (if they do), and why?

In my script tests, I separately tested each method with only few commands as opposed to
multiple interconnected commands. For example, the script test for AddNode only tests
for adding a single Node at a time and nothing else. My JUnit tests differ from the script
tests because in each individual test method in JUnit tests, I included multiple calls where
one method from UnivMap is called followed by some other methods from UnivMap, as a way to
make sure the methods can work in a more general scenario, such as how the state of the
map changes after adding and removing a Node.